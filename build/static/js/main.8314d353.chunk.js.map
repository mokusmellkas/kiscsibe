{"version":3,"sources":["App.js","api/mockserver.js","index.js"],"names":["App","useState","setItems","className","type","id","name","aria-label","onClick","search","document","getElementById","value","console","log","useEffect","fetch","then","items","data","pets","animal","isVaccinated","environment","server","createServer","models","client","Model","seeds","routes","this","namespace","timing","get","schema","request","queryParams","filter","includes","post","JSON","parse","requestBody","forEach","c","p","success","makeServer","ReactDOM","render","StrictMode"],"mappings":"oNA+BeA,EA5BH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACFC,GADE,WAgBhB,OACE,sBAAKC,UAAU,MAAf,UACC,8DACA,uBAAOC,KAAK,SAASC,GAAG,YAAYC,KAAK,IACvCC,aAAW,gCAEZ,wBAAQC,QAnBZ,WACE,IAAIC,EAASC,SAASC,eAAe,aAAaC,MAClDC,QAAQC,IAAIL,GACZM,qBAAU,WACRC,MAAM,uBAAD,OAAyBP,IAC7BQ,MACC,SAACC,GACChB,EAASgB,QAGZ,CAACT,KASF,yB,QCvBFU,EAAO,CACT,CACEb,KAAM,oBACNc,KAAM,CACJ,CAAEd,KAAM,QAASe,OAAQ,MAAOC,cAAc,GAC9C,CAAEhB,KAAM,QAASe,OAAQ,MAAOC,cAAc,KAGlD,CACEhB,KAAM,cACNc,KAAM,CACJ,CAAEd,KAAM,QAASe,OAAQ,MAAOC,cAAc,KAGlD,CACEhB,KAAM,eACNc,KAAM,CACJ,CAAEd,KAAM,eAAWe,OAAQ,SAAUC,cAAc,OAKlD,WAAoD,IAAD,yDAAJ,GAAI,IAA7BC,mBAA6B,MAAf,OAAe,EACpDC,EAASC,YAAa,CACxBF,cACAG,OAAQ,CACNC,OAAQC,KAEVC,MALwB,SAKlBL,KACNM,OANwB,WAOtBC,KAAKC,UAAY,OACjBD,KAAKE,OAAS,IAEdF,KAAKG,IAAI,WAAW,SAACC,EAAQC,GAC3B,IAAM3B,EAAS2B,EAAQC,YAAY5B,OACnC,OAAOU,EAAKmB,QAAO,SAAAX,GAAM,OAAIA,EAAOrB,KAAKiC,SAAS9B,SAGpDsB,KAAKS,KAAK,SAAS,SAACL,EAAQC,GAAa,IAAD,EACTK,KAAKC,MAAMN,EAAQO,aAA1CrC,EADgC,EAChCA,KAAMgB,EAD0B,EAC1BA,aAMZ,OALAH,EAAKyB,SAAQ,SAAAC,GACXA,EAAEzB,KAAKwB,SAAQ,SAAAE,GACTA,EAAExC,OAASA,IAAMwC,EAAExB,aAAeA,SAGnC,CAAEyB,SAAS,SCzC1BC,CAAW,CAAEzB,YAAa,gBAE1B0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAASC,eAAe,W","file":"static/js/main.8314d353.chunk.js","sourcesContent":["import './App.css'\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  function Start() {\r\n    let search = document.getElementById('searchbox').value\r\n    console.log(search)\r\n    useEffect(()=>{\r\n      fetch(`/api/clients?search=${(search)}`)\r\n      .then(\r\n        (items) => {\r\n          setItems(items);\r\n        }\r\n      )\r\n    }, [search])\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <h1>Veterinarian admin - clients</h1>\r\n     <input type=\"search\" id=\"searchbox\" name=\"q\"\r\n       aria-label=\"Search through site content\"/>\r\n\r\n      <button onClick={Start}>Kereses\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createServer, Model } from 'miragejs';\r\n\r\nlet data = [\r\n  {\r\n    name: 'Kovács Béla',\r\n    pets: [\r\n      { name: \"Bodri\", animal: \"dog\", isVaccinated: false },\r\n      { name: \"Cirmi\", animal: \"cat\", isVaccinated: false }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Varga Lajos',\r\n    pets: [\r\n      { name: \"Frakk\", animal: \"dog\", isVaccinated: false }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Nagy Béla',\r\n    pets: [\r\n      { name: \"Csőrike\", animal: \"pigeon\", isVaccinated: false }\r\n    ]\r\n  }\r\n]\r\n\r\nexport function makeServer({ environment = 'test' } = {}) {\r\n  let server = createServer({\r\n    environment,\r\n    models: {\r\n      client: Model,\r\n    },\r\n    seeds(server) { },\r\n    routes() {\r\n      this.namespace = '/api';\r\n      this.timing = 2000\r\n\r\n      this.get('clients', (schema, request) => {\r\n        const search = request.queryParams.search\r\n        return data.filter(client => client.name.includes(search))\r\n      });\r\n\r\n      this.post('/pets', (schema, request) => {\r\n        let { name, isVaccinated } = JSON.parse(request.requestBody);\r\n        data.forEach(c => {\r\n          c.pets.forEach(p => {\r\n            if (p.name === name) p.isVaccinated = isVaccinated\r\n          })\r\n        })\r\n        return { success: true }\r\n      });\r\n    },\r\n  });\r\n  return server;\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nimport { makeServer } from './api/mockserver'\r\nmakeServer({ environment: 'development' })\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}